name: CI-CD Pipeline

on:
  push:

permissions:
  contents: replaced
  security-events: write
  actions: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run: echo "TODO Run unit tests here"
  security:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Clones repo to $GITHUB_WORKSPACE
      - name: Run Snyk to check for vulnerabilites on server
        uses: snyk/actions/node@master # Image: snyk/snyk:node-18 ?
        with:
          args: --all-projects --sarif-file-output=snyk.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload result to Github Code Scanning
        uses: github/codeq1-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
  docker:
    needs: security
    runs-on: ubuntu-latest
    container: docker:latest
    services:
      docker:dind:
        image: docker:dind # Docker in Docker
        options: --privileged # Required for DinD
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU # adds support to more platforms (optional)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build with Docker compose
        run: docker compose build

      # Docker Hub Login and Push
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        run: | 
          PROJECT_NAME="ccse-cw2"
          IMAGE_TAG="${{ github.sha }}"
          DOCKERHUB_REPO="hedleyb/ccse-cw2"

          # Local image name: ccse-cw2-db:latest
          # Docker Hub image name: hedleyb/ccse-cw2-db:latest
          # Alt: Docker Hub image: hedleyb/ccse-cw2:db-latest # Not doing thia
          docker tag "${PROJECT_NAME}-db:latest" "${DOCKERHUB_REPO}-db:${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}-db:${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}-db:latest" "hedleyb/ccse-cw2-db:latest" 
          docker push "${DOCKERHUB_REPO}-db:latest"

          docker tag "${PROJECT_NAME}-server:latest" "${DOCKERHUB_REPO}-server:${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}-server:${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}-server:latest" "hedleyb/ccse-cw2-server:latest"
          docker push "${DOCKERHUB_REPO}-server:latest"

          docker tag "${PROJECT_NAME}-client:latest" "${DOCKERHUB_REPO}-client:${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}-client:${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}-client:latest" "hedleyb/ccse-cw2-client:latest"
          docker push "${DOCKERHUB_REPO}-client:latest"
  deploy:
    name: Deploy to Render
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Database
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: ${{ needs.publish.outputs.image_name }}
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deploy: true

      - name: Deploy Server
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: ${{ needs.publish.outputs.image_name }}
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deploy: true

      - name: Deploy Client
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: ${{ needs.publish.outputs.image_name }}
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deploy: true



    #   - name: Checkout
    #     uses: actions/checkout@v4
    #   - name: Trigger deployment
    #     uses: sws2apps/render-deployment@main # consider using pin for dependabot auto update
    #     with:
    #       serviceId: ${{ secrets.RENDER_SERVICE_ID }}
    #       apiKey: ${{ secrets.RENDER_API_KEY }}
    #       multipleDeployment: false # default is true



          # TODO: add localhost URL to .env file
          # This way it can be replaced when deploying to Render