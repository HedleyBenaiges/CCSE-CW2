name: CI-CD Pipeline

on:
  push:

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Clones repo to $GITHUB_WORKSPACE
      - name: Run Snyk to check for vulnerabilites on server
        uses: snyk/actions/node@master # Image: snyk/snyk:node-18 ?
        with:
          args: --all-projects # --package-manager=npm # --file=./server 
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  docker:
    needs: security
    runs-on: ubuntu-latest
    container: docker:latest
    services:
      docker:dind:
        image: docker:dind # Docker in Docker
        options: --privileged # Required for DinD
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU # adds support to more platforms (optional)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build with Docker compose
        run: docker compose build

      # Docker Hub Login and Push
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build with docker compose
        run: | 
          PROJECT_NAME="ccse-cw2"
          IMAGE_TAG="${{ github.sha }}"
          DOCKERHUB_REPO="hedleyb/ccse-cw2"

          docker tag "${PROJECT_NAME}_db:latest" "${DOCKERHUB_REPO}:db-${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}:db-${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}_db:latest" "${DOCKERHUB_REPO}:db-latest" 
          docker push "${DOCKERHUB_REPO}:db-latest"

          docker tag "${PROJECT_NAME}_server:latest" "${DOCKERHUB_REPO}:server-${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}:server-${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}_server:latest" "${DOCKERHUB_REPO}:server-latest"
          docker push "${DOCKERHUB_REPO}:server-latest"

          docker tag "${PROJECT_NAME}_client:latest" "${DOCKERHUB_REPO}:client-${IMAGE_TAG}"
          docker push "${DOCKERHUB_REPO}:client-${IMAGE_TAG}"
          docker tag "${PROJECT_NAME}_client:latest" "${DOCKERHUB_REPO}:client-latest"
          docker push "${DOCKERHUB_REPO}:client-latest"


            
            # build:
            # runs-on: ubuntu-latest
            # steps:
            # - uses: actions/checkout@v4
            # - name: Build the Docker Image
            # run: docker compose up --build
